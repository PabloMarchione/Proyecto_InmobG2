/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inmobiliaria_mddp.vistas;

import inmobiliaria_mddp.accesoDatos.CalquilerData;
import inmobiliaria_mddp.accesoDatos.InmuebleData;
import inmobiliaria_mddp.accesoDatos.InquilinoData;
import inmobiliaria_mddp.entidades.Calquiler;
import inmobiliaria_mddp.entidades.Inmueble;
import inmobiliaria_mddp.entidades.Inquilino;
import inmobiliaria_mddp.entidades.Propietario;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
/**
 *
 * @author marti
 */
public class GestionCalquileres extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionCalquileres
     */
    public GestionCalquileres() {
        initComponents();
        cargarComboInqui();
        cargarComboInmu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_tituloCalquis = new javax.swing.JLabel();
        jB_buscar = new javax.swing.JButton();
        jL_codigo = new javax.swing.JLabel();
        jTF_codigo_ID = new javax.swing.JTextField();
        jL_inquilino = new javax.swing.JLabel();
        jCB_inquilino = new javax.swing.JComboBox<>();
        jTF_garante = new javax.swing.JTextField();
        jL_garante = new javax.swing.JLabel();
        jL_inmueble = new javax.swing.JLabel();
        jCB_inmueble = new javax.swing.JComboBox<>();
        jL_propietario = new javax.swing.JLabel();
        jTF_propietario = new javax.swing.JTextField();
        jL_fechaIni = new javax.swing.JLabel();
        jDCH_fechaIni = new com.toedter.calendar.JDateChooser();
        jL_fechaFin = new javax.swing.JLabel();
        jDCH_fechaFin = new com.toedter.calendar.JDateChooser();
        jL_monto = new javax.swing.JLabel();
        jTF_monto = new javax.swing.JTextField();
        jB_nuevo = new javax.swing.JButton();
        jB_guardar = new javax.swing.JButton();
        jB_eliminar = new javax.swing.JButton();
        jB_salir = new javax.swing.JButton();
        jRB_Vigente = new javax.swing.JRadioButton();
        jRB_Renovado = new javax.swing.JRadioButton();
        jRB_NoVigente = new javax.swing.JRadioButton();

        jL_tituloCalquis.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jL_tituloCalquis.setText("CONTROL DE CONTRATOS");

        jB_buscar.setText("Buscar");
        jB_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_buscarActionPerformed(evt);
            }
        });

        jL_codigo.setText("CÃ³digo:");

        jTF_codigo_ID.setText(" ");
        jTF_codigo_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_codigo_IDActionPerformed(evt);
            }
        });

        jL_inquilino.setText("Inquilino:");

        jCB_inquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_inquilinoActionPerformed(evt);
            }
        });

        jTF_garante.setEditable(false);
        jTF_garante.setText(" ");

        jL_garante.setText("Garante:");

        jL_inmueble.setText("Inmueble:");

        jCB_inmueble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_inmuebleActionPerformed(evt);
            }
        });

        jL_propietario.setText("Propietario:");

        jTF_propietario.setEditable(false);

        jL_fechaIni.setText("Desde:");

        jL_fechaFin.setText("Hasta:");

        jL_monto.setText("Monto:");

        jTF_monto.setText(" ");

        jB_nuevo.setText("Nuevo");
        jB_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_nuevoActionPerformed(evt);
            }
        });

        jB_guardar.setText("Guardar");
        jB_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_guardarActionPerformed(evt);
            }
        });

        jB_eliminar.setText("Eliminar");
        jB_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_eliminarActionPerformed(evt);
            }
        });

        jB_salir.setText("Salir");
        jB_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_salirActionPerformed(evt);
            }
        });

        jRB_Vigente.setText("Vigente");
        jRB_Vigente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRB_VigenteActionPerformed(evt);
            }
        });

        jRB_Renovado.setText("Renovado");
        jRB_Renovado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRB_RenovadoActionPerformed(evt);
            }
        });

        jRB_NoVigente.setText("No vigente");
        jRB_NoVigente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRB_NoVigenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_inquilino)
                                    .addComponent(jL_garante)
                                    .addComponent(jL_codigo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTF_codigo_ID, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                        .addGap(84, 84, 84)
                                        .addComponent(jB_buscar))
                                    .addComponent(jTF_garante, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jCB_inquilino, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_propietario)
                                    .addComponent(jL_inmueble)
                                    .addComponent(jB_nuevo)
                                    .addComponent(jL_monto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCB_inmueble, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTF_propietario)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jB_guardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jB_eliminar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jB_salir)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jRB_Vigente)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jDCH_fechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jDCH_fechaIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTF_monto)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jRB_Renovado)
                                        .addGap(33, 33, 33))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jL_fechaIni))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jL_fechaFin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jL_tituloCalquis, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRB_NoVigente)))
                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_tituloCalquis, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_buscar)
                    .addComponent(jL_codigo)
                    .addComponent(jTF_codigo_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_inquilino)
                    .addComponent(jCB_inquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_garante)
                    .addComponent(jTF_garante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_inmueble)
                    .addComponent(jCB_inmueble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_propietario)
                    .addComponent(jTF_propietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_fechaIni)
                    .addComponent(jDCH_fechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_fechaFin)
                    .addComponent(jDCH_fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTF_monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_monto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRB_Vigente)
                        .addComponent(jRB_Renovado))
                    .addComponent(jRB_NoVigente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_nuevo)
                    .addComponent(jB_guardar)
                    .addComponent(jB_eliminar)
                    .addComponent(jB_salir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTF_codigo_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_codigo_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTF_codigo_IDActionPerformed

    private void jB_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_buscarActionPerformed
        //deshabilitar "guardar" si codigo devuelve un resultado vÃ¡lido
        //primero verifico que codigo no estÃ© vacÃ­o, y que sea un dato vÃ¡lido con try catch
        //elimino los espacios de barra, tabulacion o salto de linea con el replaceAll(primer parametro es el "falso" espacio vacio, segundo parametro es el espacio vacio posta
        String idCadena = jTF_codigo_ID.getText().replaceAll("\\s", "");
        try
        {
            int id = Integer.parseInt(idCadena);
            //instancio un calquilerData para acceder a sus metodos
            CalquilerData calquiData = new CalquilerData();
            //instancio un contrato para recibir datos
            Calquiler calqui = new Calquiler();
            calqui = calquiData.buscarContrato(id, true);
            //si me devuelve null, no existe ese contrato
            if (calqui == null)
            {
                //borramos y nos vamos. el mÃ©todo buscar ya tiene su aviso de No Encontrado
                jTF_codigo_ID.setText("");
                return;
            }
            else
            {
                //Â¿deshabilito "guardar" para evitar duplicados?
                //cargo datos en formulario
                //the Inmueble object to set as the selected item must be the same instance as one of the items in the combo box. If the calqui.getInmueble() object is not already in the combo box's list of items, the setSelectedItem method won't work.
                //To set the selected item, search for the Inmueble object in the combo box's model and then set it as the selected itemgit agi
                jCB_inquilino.setSelectedItem(calqui.getInquilino());
                DefaultComboBoxModel<Inquilino> modeloComboInqui = (DefaultComboBoxModel<Inquilino>) jCB_inquilino.getModel();
                int totalInquis = modeloComboInqui.getSize();
                for (int i = 0; i < totalInquis; i++)
                {
                    Inquilino aux = modeloComboInqui.getElementAt(i);
                    if (aux.getId_inquilino()==calqui.getInquilino().getId_inquilino())
                    {
                        jCB_inquilino.setSelectedItem(aux);
                        break;
                    }
                }
                jTF_garante.setText(calqui.getInquilino().getNomCompletoGa());
                //the Inmueble object to set as the selected item must be the same instance as one of the items in the combo box. If the calqui.getInmueble() object is not already in the combo box's list of items, the setSelectedItem method won't work.
                //To set the selected item, search for the Inmueble object in the combo box's model and then set it as the selected item
                DefaultComboBoxModel<Inmueble> modeloComboInmu = (DefaultComboBoxModel<Inmueble>) jCB_inmueble.getModel();
                int totalInmus = modeloComboInmu.getSize();
                //recorremos el modelo para encontrar la instancia
                for (int i=0; i < totalInmus; i++)
                {
                    Inmueble aux = modeloComboInmu.getElementAt(i);
                    //cuando coincide el codigo unico, significa que encontramos match y salimos
                    if(aux.getCodigo() == calqui.getInmueble().getCodigo())
                    {
                        jCB_inmueble.setSelectedItem(aux);
                        break;
                    }
                }
                jTF_propietario.setText(calqui.getInmueble().getPropietario().getApellido());
                //localDate : estu.getFechaNac()
                //transforma localDate a instant: atStartOfDay(ZoneId.systemDefault()).toInstant()
                //Date.from(Instant) trnasforma instant a date
                jDCH_fechaIni.setDate(Date.from(calqui.getFechaIni().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                jDCH_fechaFin.setDate(Date.from(calqui.getFechaFin().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                jTF_monto.setText("" + calqui.getPrecioAlquiler()); //una manera de convertir int a string, sumarle una cadena vacÃ­a
                //activo radio buttons de acuerdo a estado. 0 es no vigente, 1 es vigente y 2 es renovado
                if (calqui.getEstado()==0)
                {
                    jRB_NoVigente.setSelected(true);
                    jRB_Vigente.setSelected(false);
                    jRB_Renovado.setSelected(false);
                }
                else if (calqui.getEstado()==1)
                {
                    jRB_NoVigente.setSelected(false);
                    jRB_Vigente.setSelected(true);
                    jRB_Renovado.setSelected(false);
                }
                else if (calqui.getEstado()==2)
                {
                    jRB_NoVigente.setSelected(false);
                    jRB_Vigente.setSelected(false);
                    jRB_Renovado.setSelected(true);
                }
                //deberÃ­a apagar boton para guardar, porque ese contrato ya existe, pero sino, no puedo acceder a "modificar" desde ese mismo boton
                //jBguardar.setEnabled(false);
                //Â¿agregar botÃ³n de "editar" para modificar datos????
            }
        }
        //NumberFormatException se arroja si hay espacios vacios, o numeros reales 
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un nÃºmero valido");
            jTF_codigo_ID.setText("");
            return;
        }
    }//GEN-LAST:event_jB_buscarActionPerformed

    private void jB_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_salirActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Â¿Salir de esta ventana?", "ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) 
        {
            // con dispose salimos del internal frame. Para salir x completo: "System.exit(0);"
            this.dispose();
        }
    }//GEN-LAST:event_jB_salirActionPerformed

    private void jRB_NoVigenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRB_NoVigenteActionPerformed
        jRB_NoVigente.setSelected(true);
        jRB_Vigente.setSelected(false);
        jRB_Renovado.setSelected(false);
    }//GEN-LAST:event_jRB_NoVigenteActionPerformed

    private void jRB_VigenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRB_VigenteActionPerformed
        jRB_NoVigente.setSelected(false);
        jRB_Vigente.setSelected(true);
        jRB_Renovado.setSelected(false);
    }//GEN-LAST:event_jRB_VigenteActionPerformed

    private void jRB_RenovadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRB_RenovadoActionPerformed
        jRB_NoVigente.setSelected(false);
        jRB_Vigente.setSelected(false);
        jRB_Renovado.setSelected(true);
    }//GEN-LAST:event_jRB_RenovadoActionPerformed

    private void jB_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_guardarActionPerformed
        //capturar todos los campos 
        //buscar contrato
        //si el contrato existe, modifiarlo a traves del metodo modificar
        //si el contrato NO existe, generar un contrato con el constructor SIN id
        //PROBLEMA: Â¿deberÃ­a modificar la base de datos para agregar "codigo", de modo que Id pueda ser autoincremental?
        //como estÃ¡ hecho actualmente, sÃ­ o sÃ­ debo ingresar manualmente un cÃ³digo / id
        try
        {
            //debo separar si el contrato es nuevo para guardar, o existente para editar
            //busco contrato por codigo_id
            //si devuelve null, es nuevo
            //caso contrario, es para editar
            int id = Integer.parseInt(jTF_codigo_ID.getText());
            //instancio un CalquilerData para acceder a sus metodos
            CalquilerData calquiData = new CalquilerData();
            Calquiler calquiAux = calquiData.buscarContrato(id, false); //para que no muestre cartel de busqueda
            if (calquiAux != null)
            {
                //metodo modificar. comparo el contrato en base de datos que viene por codigo_id contra los campos del formulario
                int calquID = calquiAux.getIdContrato();
                //genero los parÃ¡metros para pasar al metodo modificarContrato
                //inquilino
                Inquilino inquil = (Inquilino) jCB_inquilino.getSelectedItem();
                //inmueble
                Inmueble inmue = (Inmueble) jCB_inmueble.getSelectedItem();
                //fecha_Ini
                LocalDate fechaInic = jDCH_fechaIni.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                //fecha_Fin
                LocalDate fechaFini = jDCH_fechaFin.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                //monto, x ej: int estuDNI = Integer.parseInt(jTFdni.getText());
                int monto = Integer.parseInt(jTF_monto.getText());
                //estado
                int estado = 0;
                if (jRB_Vigente.isSelected())
                {
                    estado = 1;
                }
                else if (jRB_Renovado.isSelected())
                {
                    estado = 2;
                }
                //una vez que tengo todos los datos capturados, genero un Contrato a modificar, con constructor completo
                Calquiler calquiPosta = new Calquiler(calquID, fechaInic, fechaFini, monto, estado, inmue, inquil);
                // la forma correcta serÃ­a con Override equals() y hashCode() , despues -> if (calquiAux.equals(calquiPosta))
                if (calquiAux.getFechaIni()==calquiPosta.getFechaIni() && calquiAux.getFechaFin()==calquiPosta.getFechaFin() && calquiAux.getPrecioAlquiler()==calquiPosta.getPrecioAlquiler() && calquiAux.getEstado()==calquiPosta.getEstado() && calquiAux.getInquilino().getId_inquilino() == calquiPosta.getInquilino().getId_inquilino() && calquiAux.getInmueble().getIdInmueble()==calquiPosta.getInmueble().getIdInmueble())
                {
                    JOptionPane.showMessageDialog(this, "No se han producido cambios");
                    return;
                }
                calquiData.modificarContrato(calquiPosta);
            }
            else
            {
                try
                {
                    if (jDCH_fechaIni == null)
                    {
                        JOptionPane.showMessageDialog(this, "Ingrese una fecha inicial");
                        return;
                    }
                    if (jDCH_fechaFin == null)
                    {
                        JOptionPane.showMessageDialog(this, "Ingrese una fecha de fin");
                        return;
                    }
                    if (jDCH_fechaFin.getDate() == jDCH_fechaIni.getDate() || jDCH_fechaFin.getDate().before(jDCH_fechaIni.getDate()))
                    {
                        JOptionPane.showMessageDialog(this, "Fecha final debe ser posterior a la fecha inicial");
                        return;
                    }
                    LocalDate fechaIni = jDCH_fechaIni.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    LocalDate fechaFin = jDCH_fechaFin.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    int monto = Integer.parseInt(jTF_monto.getText());
                    int estado = 0;
                    if (jRB_Vigente.isSelected())
                    {
                        estado = 1;
                    }
                    else if (jRB_Renovado.isSelected())
                    {
                        estado = 2;
                    }
                    Inmueble inmu = (Inmueble)jCB_inmueble.getSelectedItem();
                    Inquilino inqui = (Inquilino) jCB_inquilino.getSelectedItem();
                    
                    //instancio contrato a partir de datos
                    Calquiler calqui = new Calquiler(fechaIni, fechaFin, monto, estado, inmu, inqui);
                    calquiData.generarContrato(calqui);
                }
                catch(NumberFormatException nfe)
                {
                    JOptionPane.showMessageDialog(this, "Ingrese un monto valido");
                }
            }
            limpiarCampos();
        }
        //An empty TextField, or doubles or floats would result in a NumberFormatException
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un dato valido");
            return;
        } 
    }//GEN-LAST:event_jB_guardarActionPerformed

    private void jB_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_nuevoActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_jB_nuevoActionPerformed

    private void jCB_inmuebleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_inmuebleActionPerformed
        //capturar inmueble seleccionado y mostrar propietario
        Inmueble inmu = (Inmueble) jCB_inmueble.getSelectedItem();
        Propietario propi = inmu.getPropietario();
        jTF_propietario.setText(propi.getApellido());
    }//GEN-LAST:event_jCB_inmuebleActionPerformed

    private void jCB_inquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_inquilinoActionPerformed
        Inquilino inqui = (Inquilino) jCB_inquilino.getSelectedItem();
        jTF_garante.setText(inqui.getNomCompletoGa());
    }//GEN-LAST:event_jCB_inquilinoActionPerformed

    private void jB_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_eliminarActionPerformed
        // traer id contrato
        //llamar al mÃ©todo anularContrato(idContrato)
        try
        {
            int id = Integer.parseInt(jTF_codigo_ID.getText());
            CalquilerData calquiData = new CalquilerData();
            Calquiler calqui = new Calquiler();
            calqui = calquiData.buscarContrato(id, true);
            if (calqui == null)
            {
                //borramos el codigo ingresado y nos vamos
                jTF_codigo_ID.setText("");
                return;
            }
            else
            {
                calquiData.anularContrato(id); // este es el borrado lÃ³gico. Para eliminar fÃ­sicamente, usar: destruirContrato()
                limpiarCampos();
            }
        }
        //An empty TextField, or doubles or floats would result in a NumberFormatException
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Ingrese un nÃºmero valido");
            jTF_codigo_ID.setText("");
            return;
        }
    }//GEN-LAST:event_jB_eliminarActionPerformed

    private void cargarComboInqui()
    {
        //instanciar un InquilinoData para acceder a sus mÃ©todos
        InquilinoData inquiData = new InquilinoData();
        List<Inquilino> inquiList = inquiData.listarInquilinos();
        for (Inquilino aux : inquiList)
        {
            jCB_inquilino.addItem(aux);
        }
    }
    
    private void cargarComboInmu()
    {
        //instanciar un InmuebleData para acceder a sus mÃ©todos
        InmuebleData inmuData = new InmuebleData();
        List<Inmueble> inmuList = inmuData.listarInmuebles();
        //con un for each -enhanced for- voy agregando al comboBox
        for (Inmueble aux : inmuList)
        {
            jCB_inmueble.addItem(aux);
        }
    }
    
    private void limpiarCampos()
    {
        jTF_codigo_ID.setText("");
        jCB_inquilino.setSelectedIndex(0);//cargo el primero de la lista
        jTF_garante.setText("");
        jCB_inmueble.setSelectedIndex(0);//cargo el primero de la lista
        jTF_propietario.setText("");
        jDCH_fechaIni.setDate(null);
        jDCH_fechaFin.setDate(null);
        jTF_monto.setText("");
        jRB_NoVigente.setSelected(false);
        jRB_Vigente.setSelected(false);
        jRB_Renovado.setSelected(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_buscar;
    private javax.swing.JButton jB_eliminar;
    private javax.swing.JButton jB_guardar;
    private javax.swing.JButton jB_nuevo;
    private javax.swing.JButton jB_salir;
    private javax.swing.JComboBox<Inmueble> jCB_inmueble;
    private javax.swing.JComboBox<Inquilino> jCB_inquilino;
    private com.toedter.calendar.JDateChooser jDCH_fechaFin;
    private com.toedter.calendar.JDateChooser jDCH_fechaIni;
    private javax.swing.JLabel jL_codigo;
    private javax.swing.JLabel jL_fechaFin;
    private javax.swing.JLabel jL_fechaIni;
    private javax.swing.JLabel jL_garante;
    private javax.swing.JLabel jL_inmueble;
    private javax.swing.JLabel jL_inquilino;
    private javax.swing.JLabel jL_monto;
    private javax.swing.JLabel jL_propietario;
    private javax.swing.JLabel jL_tituloCalquis;
    private javax.swing.JRadioButton jRB_NoVigente;
    private javax.swing.JRadioButton jRB_Renovado;
    private javax.swing.JRadioButton jRB_Vigente;
    private javax.swing.JTextField jTF_codigo_ID;
    private javax.swing.JTextField jTF_garante;
    private javax.swing.JTextField jTF_monto;
    private javax.swing.JTextField jTF_propietario;
    // End of variables declaration//GEN-END:variables
}
